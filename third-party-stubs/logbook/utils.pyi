# Stubs for logbook.utils (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import threading
from .base import DEBUG, Logger
from .helpers import string_types
from typing import Any, Optional

class _SlowContextNotifier:
    timer: Any = ...
    def __init__(self, threshold: Any, func: Any) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *_: Any) -> None: ...

def logged_if_slow(*args: Any, **kwargs: Any): ...

class _Local(threading.local):
    enabled: bool = ...

def suppressed_deprecations() -> None: ...
def forget_deprecation_locations() -> None: ...
def log_deprecation_message(message: Any, frame_correction: int = ...) -> None: ...

class _DeprecatedFunction:
    def __init__(
        self, func: Any, message: Any, obj: Optional[Any] = ..., objtype: Optional[Any] = ...
    ) -> None: ...
    def __call__(self, *args: Any, **kwargs: Any): ...
    def __get__(self, obj: Any, objtype: Any): ...
    def bound_to(self, obj: Any, objtype: Any): ...
    @property
    def __name__(self): ...
    @property
    def __doc__(self): ...
    @__doc__.setter
    def __doc__(self, doc: Any) -> None: ...

def deprecated(func: Optional[Any] = ..., message: Optional[Any] = ...): ...
